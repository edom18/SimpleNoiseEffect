#pragma kernel CurlNoiseMain

#include "./NoiseMath.cginc"

struct Particle
{
    float3 Position;
    float3 OutPosition;
    float Scale;
    float2 UV;
};

RWStructuredBuffer<Particle> _Particles;

float _Progress;
float _Intensity;
float _Rotate;
float _NoiseScale;
int _ParticleNumPerRow;

static const float PI = 3.14159265;
static const float PI2 = PI * 2.0;

[numthreads(8,8,1)]
void CurlNoiseMain(uint2 id : SV_DispatchThreadID)
{
    int i = id.y * _ParticleNumPerRow + id.x;
    float3 pos = _Particles[i].Position;

    float3 rpos = pos;
    rpos.xz = mul(rpos.xz, rot(_Progress * PI2 * _Rotate));
    rpos = CurlNoise(rpos * _NoiseScale);
    pos += ((rpos * 2.0 - 1.0) * _Progress) * _Intensity;

    _Particles[i].OutPosition = pos;
    _Particles[i].Scale = 1.0 - _Progress;
}
